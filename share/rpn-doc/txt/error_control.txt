Rp2K Error Control 
Release : alpha (0.2)
Authors : Alexei Mailybaev and Mario de Sa Vera


FUNCTIONAL SPECIFICATION

	The new design for the Error Control mechanism aims to reduce the number of parameters used as well as have a more realistic usage of parameters taking in consideration the scaling factors which should be specified by the Physics layer (these parameters are currently being hardcoded with acceptable values for the Quad equations) or calculated based on the Boundaries parameters (this is up to the user). Another feature of the new design is to have an error parameter related to Sigma and a Stationary Point boundary adjustment parameter. The final goal of the new design is to enable the usage of a single EPS parameter to be applied to error control related parameters in a transparent way. Therefore EPS becomes the major application accuracy control parameter available to the user :

* EPS - General accuracy control parameter

ODE Solver Error Control

* MAX_STATE_STEP_LENGTH - Maximal state step length for ODE solver
* MIN_TIME_STEP_LENGTH - Minimal time step length for ODE solver (10E-8 MAX_TIME_STEP_LENGTH)
* MAX_TIME_STEP_LENGTH - Maximal time step length for ODE solver 
* STATE_SCALING_VECTOR - Accuracy for the ODE solver (the scaling vector) 
* STATIONARY_POINT_MIN_DISTANCE - The minimum distance (length) from Stationary Points that the orbit calculations should consider
* STATIONARY_POINT_PREF_DISTANCE - The preferable distance (length) from Stationary Points that the orbit calculations should start with

* The previous STP_MAX (max number of steps for the ODE solver will be fixed to 50K steps)

Connection Error Control
* SIGMA_SCALING_FACTOR - The scaling factor for Sigma 
* MAX_SIGMA_STEP_LENGTH - Maximal step length for changing sigma in connection algorithm
* MAX_STATE_STEP_LENGTH - Maximal step length for changing state coordinates at the Poincare section in connection algorithm

In terms of scaling factors there will be methods available for coordinate vectors norms calculation which will take in consideration the state scaling factors. This feature will be also available for sigma scaling so we can take comparisons directly with EPS for error parameters.


TECHNICAL SPECIFICATION

	With the new parameters listed in the Functional Specification there will be a new set of dialogs presented to the user :

General Error Parameter Dialog
* EPS - double precision parameter

ODE Solver Error Control Dialog
* MAX_STATE_STEP_LENGTH - double precision parameter
* MAX_TIME_STEP_LENGTH - double precision parameter

 Check box with user choice of getting the STATE_SCALING_VECTOR from the Physics layer
* STATE_SCALING_VECTOR - set of double precision parameters (optional)

* STATIONARY_POINT_MIN_DISTANCE - double precision parameter
* STATIONARY_POINT_PREF_DISTANCE - double precision parameter

Connection Error Control Dialog
* MAX_SIGMA_STEP_LENGTH - double precision parameter
* MAX_STATE_STEP_LENGTH - double precision parameter
* SIGMA_SCALING_FACTOR - double precision parameter



The data structure to hold these parameters will be a static place holder for the set of Error Control Modules described in the Functional Specification : @1

static public class RpErrorControl {

	ODEErrorModule ode();
	ConnectionsErrorModule conn();
	double eps();
	
	void init(double EPS) {

		ODEErrorModule.init(EPS);
		ConnectionsErrorModule.init(EPS);
	}
}

The ODEErrorModule and ConnectionsErrorModule will hold the list of parameters respectively and should be initiated through the EPS parameter. These classes will offer access methods to the constants :

static public ODEErrorModule {

	void init(double EPS);

	double maxStateStepLength();
	double minTimeStepLength();
	double maxTimeStepLength();
	double minStationaryPointDistance();
	double prefStationaryPointDistance();
	double[] stateScalingFactors();	
}

static public ConnectionsErrorModule {

	void init(double EPS);

	double maxSigmaStepLength();
	double maxPSectionStepLength();
	double[] sigmaScalingFactors();	
	
}

------------------------------------------------------------------------------------------------------------------
@1 One note that should be done is the way how the state scaling vector is being filled. Due to Boundary
complexities we are getting the max and min subtraction for each axis. (see RpErrorControl implemenation)
