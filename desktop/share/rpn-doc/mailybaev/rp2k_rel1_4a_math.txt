This documentation provides mathematical description of objects. References are based on the paper by Mailybaev, Marchesin, and de Sa Vera.

Stationary Point: 

point_	stationary point f(x0) = 0

eigenValR_ + i eigenValI_	eigenvalues ordered with increasing real part
eigenVec_	eigenvectors

DimP_		number of eigenvalues with positive real part
DimN_	number of eigenvalues with negative real part

schurFormP_	Shur form with eigenvalues having positive real part going first, see (4.3),(4.4)
schurVecP_	transformation matrix

schurFormN_	Shur form with eigenvalues having negative real part going first
schurVecN_	transformation matrix

integrationFlag_	flag indicating result of stationaryPointCalc.calc()

StationaryPointCalc:

forms an object StationaryPoint using Newtons method. A point initial_ is taken as initial guess.

ManifoldOrbit:

stationaryPoint_	stationary point

orbit_			orbit lying in the stable or unstable manifold

firstPoint_		first point of the orbit (end of the approximate part), see (4.9)

timeDirection_	positive/negative correspond to unstable/stable manifolds, respectively

finishType_		indicates the stopping condition for the orbit

ManifoldOrbitCalc:

forms an object ManifoldOrbit as described in the paper:
Input:
a)timeDirection_
b)stationaryPoint_
c)firstPoint_	reference point
Computations:
a)evaluates the second order approximation of the manifold, see Section 4.2
b)finds value of h = UuT(firstPoint - stationaryPoint)
c)corrects value of h using formula (4.27), where T is chosen such that the inequalities ||x(T) - xapp(T)|| £ eps and ||x(T) - x(-¥)|| £ prefDeltaNorm are satisfied (the bisection method is used to find the value of T such that one of the inequalities is satisfied as an equality).
d)numerical integrations from the point x(T) = x0 + Uuh,  where we set T = 0.

ManifoldSensitivity:

x_Stationary_		stationary point coordinates

Xp_Stationary_	= - F0-1G0 (sensitivity of stationary point)

x_t0_			first point of the orbit

x_t1_			last point of the orbit

Xp_t1_		value of solution of equations (3.10), (3.11) at the last point of the orbit

X_t0_			value of the fundamental matrix Y(t) at the first point of the orbit

X_t1_			value of the fundamental matrix Y(t) at the last point of the orbit

ManifoldSensitivityCalc

Makes a ManifoldSensitivity object for a ManifoldOrbit object. Integrations are made by 4-5th order Runge-Kutta method with step lengths taken from ManifoldOrbit. Formulae for equations and initial conditions are taken from Section 4.5.

ConnectionOrbit:

uMinus_ 	left stationary point
uPlus_ 	right stationary point
orbit_		orbit

ConnectionCalc

Creates a connecting orbit using Newtons (or gradient) method for manifoldObitA and manifoldObitB. Spep in the method is based on equations (5.3), (5.4). New reference points are obtained using equation (5.1) and corrected by deleting a component proportional to f(x(t)). A gradient method is used is ||xPa - xPb|| > maxPSectionStepLength or |Ds| > maxSigmaStepLength.





