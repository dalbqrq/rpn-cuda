<project name="RPN" default="compile" basedir="..">
    
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <!--  <property name="nativelibdir"  value="/native"/> -->
    <property name="libdir"  value="lib"/>
    <property name="rpngrouphome"  value="lib"/>
    <property name="docdir"  value="doc"/>
    <property name="JNIdir"  value="JNI"/>
    <property name="includedir"  value="${JNIdir}/include"/>
    <property environment="env"/>
    <property name="linuxinclude" value="${env.JAVA_HOME}/include/linux"/>
    <property name="solarisinclude" value="${env.JAVA_HOME}/include/solaris"/>
    
    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${build}/images"/>
        
        
    </target>
    
    <target name="compile" depends="init" description="compile the source " >
        
        <depend srcdir="${src}" destdir="${build}" cache="depcache" closure="yes"/>
        
        <javac  deprecation="off" debug="true" source="1.4" target="1.4" classpath="${libdir}/log4j.jar:${libdir}/jbossall-client.jar:${libdir}/vecmath.jar:${libdir}/pdflib.jar:${libdir}/xml4j.jar:${libdir}/jlapack-0.6.jar:${build}:${libdir}/msv.jar:${libdir}/iso-relax.jar" srcdir="${src}" sourcepath="${src}" destdir="${build}">
        </javac>
        
        <!--   <copy todir="build/images">
            <fileset dir="rpn/images"/>
        </copy>--> <!-- TODO  Include images into jar project --> 
        
        <jar destfile="lib/rpn.jar"
             basedir="${build}"
        />
        
        <!--<exec executable="make" >
            <arg line="-f makefile"></arg>

            </arg>
        </exec> --> <!-- TODO Call make to compile C++ sources -->
        
    </target>
    
    <target name="doc" depends="compile" description="creates of all packages html documentation">
        <javadoc  destdir="${docdir}" classpath="${build}" >
            <packageset dir="${src}" defaultexcludes="yes">
                <include name="rpn/**" />
                <include name="rpnumerics/**" />
                <include name="wave/**" />
            </packageset>
            
        </javadoc>
    </target>
    
    <target name="rpndoc" depends="compile" description="creates of RPn  package html documentation">
        <javadoc  destdir="${docdir}" classpath="${build}" >
            <packageset dir="${src}" defaultexcludes="yes">
                <include name="rpn/**" />
            </packageset>
            
        </javadoc>
    </target>
    
    <target name="multiddoc" depends="compile" description="creates of Multid package html documentation">
        <javadoc  destdir="${docdir}" classpath="${build}" >
            <packageset dir="${src}" defaultexcludes="yes">
                <include name="wave/multid/**" />
            </packageset>
            
        </javadoc>
    </target>
    
    <target name="clean"
            description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
    </target>
    
    
    <!-- <exec executable="gcc" >
   <arg line ="-c  -I${basedir}/${nativedir}/Quad2C/ -I${env.JAVA_HOME}/include -I${linuxinclude} -I${includedir} ${JNIdir}/JNIWaveFlow.c  -o ${JNIdir}/JNIWaveFlow.o" >
   </arg>
  </exec> -->


    <!--<exec executable="gcc" >
   <arg line ="-c  -Wall -I${basedir}/${nativedir}/Steam/ -I${env.JAVA_HOME}/include -I${linuxinclude} -I${includedir} ${JNIdir}/JNIVectorFunction.c  -o ${JNIdir}/JNIVectorFunction.o" >
   </arg>
  </exec> -->

    
    <!-- <exec executable="gcc" >
   <arg line ="-c  -DMCD_VERBOSE -D_MCD_CHECK  -I${basedir}/${nativedir}/Quad2C/ -I${env.JAVA_HOME}/include -I${linuxinclude} -I${includedir} ${JNIdir}/JNIWaveFlow.c  -o ${JNIdir}/JNIWaveFlow.o" >
   </arg>
  </exec> -->
    
</project>
