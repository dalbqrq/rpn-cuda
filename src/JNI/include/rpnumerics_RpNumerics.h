/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class rpnumerics_RpNumerics */

#ifndef _Included_rpnumerics_RpNumerics
#define _Included_rpnumerics_RpNumerics
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: profile_ */
/* Inaccessible static: hugoniotCurveCalc_ */
/* Inaccessible static: rarefactionMethodName_ */
/* Inaccessible static: familyIndex_ */
/*
 * Class:     rpnumerics_RpNumerics
 * Method:    init
 * Signature: (Lrpnumerics/RPNumericsProfile;)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_init
  (JNIEnv *, jclass, jobject);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    initShockFlow
 * Signature: (Lrpnumerics/PhasePoint;D)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_initShockFlow
  (JNIEnv *, jclass, jobject, jdouble);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    initRarefactionFlow
 * Signature: (Lrpnumerics/PhasePoint;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_initRarefactionFlow
  (JNIEnv *, jclass, jobject, jstring);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    changePoincareSection
 * Signature: (Lrpnumerics/ConnectionOrbit;)Lwave/util/PoincareSection;
 */
JNIEXPORT jobject JNICALL Java_rpnumerics_RpNumerics_changePoincareSection
  (JNIEnv *, jclass, jobject);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    setPoincareSectionFlag
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_setPoincareSectionFlag
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    changeFluxParams
 * Signature: ([D)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_changeFluxParams
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    changeErrorControl
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_changeErrorControl
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    changeSigma
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_changeSigma__D
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    changeSigma
 * Signature: (Lwave/util/RealVector;)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_changeSigma__Lwave_util_RealVector_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    getSigma
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_rpnumerics_RpNumerics_getSigma
  (JNIEnv *, jclass);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    getXZero
 * Signature: ()Lrpnumerics/PhasePoint;
 */
JNIEXPORT jobject JNICALL Java_rpnumerics_RpNumerics_getXZero
  (JNIEnv *, jclass);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    setXZero
 * Signature: (Lrpnumerics/PhasePoint;)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_setXZero
  (JNIEnv *, jclass, jobject);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    getFluxParams
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_rpnumerics_RpNumerics_getFluxParams
  (JNIEnv *, jclass);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    setShockFlow
 * Signature: (Lrpnumerics/PhasePoint;D)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_setShockFlow
  (JNIEnv *, jclass, jobject, jdouble);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    setRarefactionFlow
 * Signature: (Lrpnumerics/PhasePoint;)V
 */
JNIEXPORT void JNICALL Java_rpnumerics_RpNumerics_setRarefactionFlow
  (JNIEnv *, jclass, jobject);

/*
 * Class:     rpnumerics_RpNumerics
 * Method:    boundary
 * Signature: ()Lwave/util/Boundary;
 */
JNIEXPORT jobject JNICALL Java_rpnumerics_RpNumerics_boundary
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
