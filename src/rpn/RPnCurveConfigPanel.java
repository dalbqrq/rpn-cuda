/*
 * Instituto de Matematica Pura e Aplicada - IMPA
 * Departamento de Dinamica dos Fluidos
 *
 */
package rpn;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JComboBox;
import rpn.usecase.CurvePlotAgent;
import rpnumerics.RpNumerics;

public class RPnCurveConfigPanel extends javax.swing.JPanel {

    public RPnCurveConfigPanel() {
        initComponents();

        //Adding names

        addMethodNames();
        addFlowNames();
        addFamilyIndex();
        directionNames();

        curvePanel.add(CurvePlotAgent.instance().getContainer(), BorderLayout.SOUTH);

        CurvePlotAgent.instance().setEnabled(true);
        

        //Initial configuration of plot agent

        if (((String) flowComboBox.getSelectedItem()).matches(".*Shock.*")) {//TODO HardCoded !!Only to show a possible behaviour
            familyIndexComboBox.setEnabled(false);
            directionComboBox.setEnabled(false);
            CurvePlotAgent.instance().setType("shock");
        } else {
            directionComboBox.setEnabled(true);
            familyIndexComboBox.setEnabled(true);
            CurvePlotAgent.instance().setType("rarefaction");
        }


        if (((String) directionComboBox.getSelectedItem()).matches("Forward")) {
            CurvePlotAgent.instance().setTimeDirection(1);
        } else {
            CurvePlotAgent.instance().setTimeDirection(-1);
        }


        CurvePlotAgent.instance().setMethodName((String) methodComboBox.getSelectedItem());
        CurvePlotAgent.instance().setFlowName((String) flowComboBox.getSelectedItem());
        CurvePlotAgent.instance().setFamilyIndex(((Integer) familyIndexComboBox.getSelectedItem()).intValue());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        methodPanel = new javax.swing.JPanel();
        methodComboBox = new javax.swing.JComboBox();
        methodLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        flowPanel = new javax.swing.JPanel();
        familyIndexComboBox = new javax.swing.JComboBox();
        familyIndexLabel = new javax.swing.JLabel();
        directionComboBox = new javax.swing.JComboBox();
        directionLabel = new javax.swing.JLabel();
        flowComboBox = new javax.swing.JComboBox();
        flowLabel = new javax.swing.JLabel();
        curvePanel = new javax.swing.JPanel();

        methodLabel.setText("Method");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        org.jdesktop.layout.GroupLayout methodPanelLayout = new org.jdesktop.layout.GroupLayout(methodPanel);
        methodPanel.setLayout(methodPanelLayout);
        methodPanelLayout.setHorizontalGroup(
            methodPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(methodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(methodPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(methodLabel)
                    .add(methodComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 36, Short.MAX_VALUE)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(13, 13, 13))
        );
        methodPanelLayout.setVerticalGroup(
            methodPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(methodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(methodLabel)
                .add(18, 18, 18)
                .add(methodComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
            .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        familyIndexLabel.setText("Family Index");

        directionLabel.setText("Direction");

        flowLabel.setText("Flow");

        org.jdesktop.layout.GroupLayout flowPanelLayout = new org.jdesktop.layout.GroupLayout(flowPanel);
        flowPanel.setLayout(flowPanelLayout);
        flowPanelLayout.setHorizontalGroup(
            flowPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(flowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(flowPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(flowLabel)
                    .add(flowComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(directionLabel)
                    .add(directionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(familyIndexLabel)
                    .add(familyIndexComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        flowPanelLayout.setVerticalGroup(
            flowPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(flowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(flowLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(flowComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(directionLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(directionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(familyIndexLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(familyIndexComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        curvePanel.setLayout(new java.awt.BorderLayout());

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(methodPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(flowPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(curvePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(methodPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(flowPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
            .add(curvePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel curvePanel;
    private javax.swing.JComboBox directionComboBox;
    private javax.swing.JLabel directionLabel;
    private javax.swing.JComboBox familyIndexComboBox;
    private javax.swing.JLabel familyIndexLabel;
    private javax.swing.JComboBox flowComboBox;
    private javax.swing.JLabel flowLabel;
    private javax.swing.JPanel flowPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox methodComboBox;
    private javax.swing.JLabel methodLabel;
    private javax.swing.JPanel methodPanel;
    // End of variables declaration//GEN-END:variables
    private void addMethodNames() {

        methodComboBox.addItem("ContinuationRarefactionMethod");
        methodComboBox.addItem("RarefactionMethod");
        methodComboBox.addActionListener(new MethodAction());
    }

    private void addFlowNames() {

        flowComboBox.addItem("RarefactionFlow");
        flowComboBox.addItem("ShockFlow");
        flowComboBox.addActionListener(new FlowAction());
    }

    private void directionNames() {

        directionComboBox.addItem("Forward");
        directionComboBox.addItem("Backward");
    }

    private void addFamilyIndex() {

        for (int i = 0; i < RpNumerics.domainDim(); i++) {
            familyIndexComboBox.addItem(i);
        }
        familyIndexComboBox.addActionListener(new FamilyIndexAction());

    }

    private class MethodAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            CurvePlotAgent.instance().setMethodName((String) methodComboBox.getSelectedItem());

        }
    }

    private class FlowAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            CurvePlotAgent.instance().setFlowName((String) flowComboBox.getSelectedItem());
            if (((String) flowComboBox.getSelectedItem()).matches(".*Shock.*")) {//TODO HardCoded !!Only to show a possible behaviour
                familyIndexComboBox.setEnabled(false);
                directionComboBox.setEnabled(false);
                CurvePlotAgent.instance().setType("shock");
            } else {
                directionComboBox.setEnabled(true);
                familyIndexComboBox.setEnabled(true);
                CurvePlotAgent.instance().setType("rarefaction");
            }
        }
    }

    private class FamilyIndexAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            CurvePlotAgent.instance().setFamilyIndex(((Integer) familyIndexComboBox.getSelectedItem()).intValue());

        }
    }

    private class DirectionAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();

            if (((String) combo.getSelectedItem()).matches("Forward")) {
                CurvePlotAgent.instance().setTimeDirection(1);
            } else {
                CurvePlotAgent.instance().setTimeDirection(-1);
            }
        }
    }
}
