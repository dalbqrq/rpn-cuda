/*
 * Instituto de Matematica Pura e Aplicada - IMPA
 * Departamento de Dinamica dos Fluidos
 *
 */

package rpn;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JComboBox;
import rpn.usecase.CurvePlotAgent;
import rpnumerics.RpNumerics;

public class RPnCurveConfigPanel extends javax.swing.JPanel {
    
    public RPnCurveConfigPanel() {
        initComponents();
        
        //Adding names
        
        addMethodNames();
        addFlowNames();
        addFamilyIndex();
        directionNames();
        
        
        //Initial configuration of plot agent
        
        if (((String)flowComboBox.getSelectedItem()).matches(".*Shock.*")){//TODO HardCoded !!Only to show a possible behaviour
            familyIndexComboBox.setEnabled(false);
            directionComboBox.setEnabled(false);
            CurvePlotAgent.instance().setType("shock");
        }
        
        else{
            directionComboBox.setEnabled(true);
            familyIndexComboBox.setEnabled(true);
            CurvePlotAgent.instance().setType("rarefaction");
        }
        
        
        if (((String)directionComboBox.getSelectedItem()).matches("Forward"))
            CurvePlotAgent.instance().setTimeDirection(1);
        else
            CurvePlotAgent.instance().setTimeDirection(-1);
        
        
        CurvePlotAgent.instance().setMethodName((String)methodComboBox.getSelectedItem());
        CurvePlotAgent.instance().setFlowName((String)flowComboBox.getSelectedItem());
        CurvePlotAgent.instance().setFamilyIndex(((Integer) familyIndexComboBox.getSelectedItem()).intValue());
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        methodLabel = new javax.swing.JLabel();
        flowLabel = new javax.swing.JLabel();
        familyIndexLabel = new javax.swing.JLabel();
        methodComboBox = new javax.swing.JComboBox();
        flowComboBox = new javax.swing.JComboBox();
        familyIndexComboBox = new javax.swing.JComboBox();
        directionLabel = new javax.swing.JLabel();
        directionComboBox = new javax.swing.JComboBox();

        methodLabel.setText("Method");

        flowLabel.setText("Flow");

        familyIndexLabel.setText("Family Index");

        directionLabel.setText("Direction");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(methodComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(methodLabel))
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(flowComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(flowLabel))
                .add(42, 42, 42)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(directionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(directionLabel))
                .add(29, 29, 29)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(familyIndexLabel)
                    .add(familyIndexComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(methodLabel)
                    .add(flowLabel)
                    .add(directionLabel)
                    .add(familyIndexLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(methodComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(flowComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(directionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(familyIndexComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox directionComboBox;
    private javax.swing.JLabel directionLabel;
    private javax.swing.JComboBox familyIndexComboBox;
    private javax.swing.JLabel familyIndexLabel;
    private javax.swing.JComboBox flowComboBox;
    private javax.swing.JLabel flowLabel;
    private javax.swing.JComboBox methodComboBox;
    private javax.swing.JLabel methodLabel;
    // End of variables declaration//GEN-END:variables
    
    private void addMethodNames(){
        
        methodComboBox.addItem("ContinuationRarefactionMethod");
        methodComboBox.addItem("RarefactionMethod");
        methodComboBox.addActionListener(new MethodAction());
    }
    private void addFlowNames(){
        
        flowComboBox.addItem("RarefactionFlow");
        flowComboBox.addItem("ShockFlow");
        flowComboBox.addActionListener(new FlowAction());
    }
    
    private void directionNames(){
        
        directionComboBox.addItem("Forward");
        directionComboBox.addItem("Backward");
    }
    
    
    private void addFamilyIndex(){
        
        for (int i =0;i < RpNumerics.domainDim();i++)
            familyIndexComboBox.addItem(i);
        familyIndexComboBox.addActionListener(new FamilyIndexAction());
        
    }
    
    private class MethodAction implements ActionListener{
        
        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            CurvePlotAgent.instance().setMethodName((String)methodComboBox.getSelectedItem());
            
        }
        
    }
    
    private class FlowAction implements ActionListener {
        
        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            CurvePlotAgent.instance().setFlowName((String)flowComboBox.getSelectedItem());
            if (((String)flowComboBox.getSelectedItem()).matches(".*Shock.*")){//TODO HardCoded !!Only to show a possible behaviour
                familyIndexComboBox.setEnabled(false);
                directionComboBox.setEnabled(false);
                CurvePlotAgent.instance().setType("shock");
            }
            
            else{
                directionComboBox.setEnabled(true);
                familyIndexComboBox.setEnabled(true);
                CurvePlotAgent.instance().setType("rarefaction");
            }
        }
        
    }
    
    private class FamilyIndexAction implements ActionListener {
        
        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            CurvePlotAgent.instance().setFamilyIndex(((Integer) familyIndexComboBox.getSelectedItem()).intValue());
            
        }
        
    }
    
    private class DirectionAction implements ActionListener{
        public void actionPerformed(ActionEvent e) {
            JComboBox combo = (JComboBox) e.getSource();
            
            if (((String)combo.getSelectedItem()).matches("Forward"))
                CurvePlotAgent.instance().setTimeDirection(1);
            else
                CurvePlotAgent.instance().setTimeDirection(-1);
        }
    }
    
    
}
